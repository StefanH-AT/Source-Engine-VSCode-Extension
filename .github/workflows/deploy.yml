# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Continuous Deployment

on:
  push:
    branches: [ master ]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
  
    - name: Install
      run: npm ci
      
    - name: Lint
      run: npm run lint
     
    - name: Test
      run: npm run test
           
    - name: Set up publishing
      run: npm install vsce --save-dev
     
    - name: Publish
      run: npm run deploy
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
        
    - name: Read package.json
      id: package-json
      run: |
        content=`cat ./package.json`
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        echo "::set-output name=packageJson::$content"
      
    - name: Get Changelog
      id: changelog
      run: |
        version=${{fromJson(steps.package-json.outputs.packageJson).version}}
        escaped_version=$(printf '%s\n' "$version" | sed -e 's/[]\/$*.^[]/\\&/g')
        changelog=`sed -n "/^## \[$escaped_version]/,/^## /p" CHANGELOG.md | sed '$ d' | sed '1,1d'`
        changelog1="${changelog//'%'/'%25'}"
        changelog1="${changelog1//$'\n'/'%0A'}"
        changelog1="${changelog1//$'\r'/'%0D'}"
        changelog2="${changelog//$'\n'/'\\n'}"
        changelog2="${changelog2//$'\r'/'\\r'}"
        echo "::set-output name=escaped::$changelog"
        echo "::set-output name=unescaped::$changelog1"
        echo "::set-output name=doubleescaped::$changelog2"

    - name: Github Release
      id: release
      uses: softprops/action-gh-release@v1
      with:
        body: "${{steps.changelog.outputs.unescaped}}"
        tag_name: "${{fromJson(steps.package-json.outputs.packageJson).version}}"

    - name: Prepare Discord Message
      id: discord-msg
      run: |
        awk '{
          gsub("#VERSION#","${{fromJson(steps.package-json.outputs.packageJson).version}}",$0)
          gsub("#DESCRIPTION#","${{steps.changelog.outputs.doubleescaped}}",$0)
          gsub("#URL#","${{steps.release.outputs.url}}",$0)
          print $0
        }' ./.github/workflows/deploy_discord_message.json > ./.github/workflows/deploy_discord_message2.json

    - name: Send Discord Message
      uses: tsickert/discord-webhook@v4.0.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        raw-data: "./.github/workflows/deploy_discord_message2.json"